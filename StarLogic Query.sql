
----- This is the First Part

----- This part generates total count of all customers who used the Starlogic service. It writes it in a table so as to enhance its spool
CREATE TABLE Starlog AS
-- insert into Starlog
(SELECT
COUNT(CALL_ORIGINATING_NUMBER)missed_calls_transaction,
COUNT(DISTINCT CALL_ORIGINATING_NUMBER)unique_Sender_A_No_Subs,
COUNT(DISTINCT CALL_TERMINATING_NUMBER)unique_B_NO_Subs,
CALL_START_DATE

FROM aoladime.CDR_SERVICE_USAGE_RATED_CDR_MAIN 

WHERE CALL_START_DATE BETWEEN '2025-03-01' AND '2025-03-08'
AND CALL_TERMINATING_NUMBER LIKE '8850%'

AND LENGTH(CALL_TERMINATING_NUMBER) >= 14
AND SERVICE_USAGE_DIRECTION_KEY = 634 
GROUP BY CALL_START_DATE 
) 
WITH NO DATA
-- with ur;



----- This is the Query to Spool Out customers who used the Starlogic service
SELECT CALL_START_DATE,
missed_calls_transaction C1,
unique_Sender_A_No_Subs C2,
unique_B_NO_Subs C3 
FROM Starlog
WHERE CALL_START_DATE BETWEEN '2025-03-01' AND '2025-03-31'
WITH ur;



----- This is the Query to generate the Call logs for ON_NET Transactions. Recall that it considers only return (response) calls to the calling party within max of 1hr. It also considers only main accounts and dedicated accounts that supports O-Net transactions

CREATE TABLE Starlogic AS
----- insert into Starlogic 
(
SELECT 
 CALL_ORIGINf ,called_nof, CALL_ORIGIN_c,Calling_no,CALL_START_DATE,  CALL_START_TIME,recall_time , 
nvl(SERVICE_CLASS_f,0)  SERVICE_CLASS_f, nvl(SERVICE_CLASS_C,0)  SERVICE_CLASS_C,
nvl(CHARGED_DURATION,0) CHARGED_DURATION,nvl(LEG_TYPE_KEY ,0 )LEG_TYPE_KEY, nvl(DA_KEY,0 ) DA_KEY ,
nvl(DA_KEY_f,0 ) DA_KEY_f  FROM (
(
SELECT CALL_ORIGINATING_NUMBER CALL_ORIGINf,SERVICE_CLASS SERVICE_CLASS_f, CALL_TERMINATING_NUMBER
, RIGHT (CALL_TERMINATING_NUMBER,10) called_nof
, CALL_START_DATE, CALL_START_TIME,PRIMARY_DEDUCTION_ACCOUNT_ID DA_KEY_f FROM aoladime.CDR_SERVICE_USAGE_RATED_CDR_MAIN
WHERE CALL_START_DATE BETWEEN '2025-03-01' AND '2025-03-08'
AND CALL_TERMINATING_NUMBER LIKE '8850%'
AND LENGTH(CALL_TERMINATING_NUMBER) >= 14
AND SERVICE_USAGE_DIRECTION_KEY = 634
)a
LEFT OUTER JOIN
(
SELECT CALL_ORIGINATING_NUMBER CALL_ORIGIN_c, CALL_TERMINATING_NUMBER Calling_no
, CALL_START_DATE call_date , CALL_START_TIME recall_time, SERVICE_CLASS SERVICE_CLASS_C,CHARGED_DURATION,LEG_TYPE_KEY,PRIMARY_DEDUCTION_ACCOUNT_ID DA_KEY FROM aoladime.CDR_SERVICE_USAGE_RATED_CDR_MAIN
WHERE CALL_START_DATE BETWEEN '2025-03-01' AND '2025-03-08'
AND PRIMARY_DEDUCTION_ACCOUNT_ID IN (0,1,3,14,27,45,46,227,237,84,85,96,102,232,294)
)b
ON CALL_ORIGINf = Calling_no 
AND CALL_ORIGIN_c = called_nof
AND recall_time BETWEEN CALL_START_TIME AND CALL_START_TIME + 1 HOUR
)) 
WITH ur
---WITH NO DATA;



 -------- This Query generates 1 to All relationship call log for ONNET
CREATE TABLE Starlogic1 AS
----- insert into Starlogic1
(SELECT  CALL_ORIGINF, CALLED_NOF, CALL_START_DATE, CALL_START_TIME, RECALL_TIME, SERVICE_CLASS_F, SERVICE_CLASS_C, CHARGED_DURATION, LEG_TYPE_KEY, DA_KEY  FROM 
(SELECT CALL_ORIGINF, CALLED_NOF, CALL_START_DATE, CALL_START_TIME, RECALL_TIME, SERVICE_CLASS_F, SERVICE_CLASS_C, CHARGED_DURATION, LEG_TYPE_KEY, DA_KEY,rownumber () over (PARTITION BY  CALL_ORIGINF, CALLED_NOF, CHARGED_DURATION ORDER BY CALL_START_DATE DESC) rn
FROM Starlogic
WHERE LEFT(CALL_START_DATE, 4)||'-'||SUBSTR(CALL_START_DATE,6,2)||'-'||SUBSTR(CALL_START_DATE, 9,2) = '2025-03-01'
)
WHERE rn = 1
AND SERVICE_CLASS_C IN (SELECT SERVICE_CLASS_NAME FROM a2367622.Starlogic_SERVICE_CLASS)
)
WITH ur;
----- with no data;


--------------- This QUERY generates 1 TO 1 relationship CALL LOG FOR ONNET ---------------

SELECT MAX(CALL_START_DATE) FROM Starlogic2;


CREATE TABLE Starlogic2 AS 
---INSERT INTO Starlogic2 
(SELECT CALL_ORIGINF, CALLED_NOF, CALL_START_DATE, CALL_START_TIME, RECALL_TIME, SERVICE_CLASS_F, SERVICE_CLASS_C, CHARGED_DURATION, LEG_TYPE_KEY, DA_KEY PRIMARY_DEDUCTION_ACCOUNT_ID FROM 
(SELECT CALL_ORIGINF, CALLED_NOF, CALL_START_DATE, CALL_START_TIME, RECALL_TIME, SERVICE_CLASS_F, SERVICE_CLASS_C, CHARGED_DURATION, LEG_TYPE_KEY, DA_KEY ,rownumber () over (PARTITION BY  CALL_ORIGINF, CALLED_NOF, CALL_START_TIME ORDER BY CALL_START_TIME ASC) rn
FROM Starlogic1
WHERE LEFT(CALL_START_DATE, 4)||'-'||SUBSTR(CALL_START_DATE,6,2)||'-'||SUBSTR(CALL_START_DATE, 9,2) = '2025-03-01'
)
WHERE rn = 1
)
WITH ur;
--with NO DATA;



-------- QUERIES TO UPDATE THE EXCEL SHEET

-------- ONE to ONE ONNET (C4 & C5)

SELECT CALL_START_DATE, COUNT(CALL_ORIGINF) C4 , COUNT(DISTINCT CALL_ORIGINF)C5
FROM Starlogic2
WHERE CALL_START_DATE >= '2025-03-01' 
AND RECALL_TIME IS NOT NULL
GROUP BY CALL_START_DATE
WITH ur;




--------------------------- ONE TO ONE ONNET DA MOU USAGE -----------------------
SELECT CALL_START_DATE,DA0,DA1_POSTPAID,DA3,DA232,DA14,DA27,DA45,DA46,DA84,DA85,DA227,DA237,DA96,DA102,DA294
FROM (
SELECT CALL_START_DATE, MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 0 THEN CHARGED_DURATION END )DA0,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 1 THEN CHARGED_DURATION END )DA1_Postpaid,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 3 THEN CHARGED_DURATION END )DA3,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 232 THEN CHARGED_DURATION END )DA232,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 14 THEN CHARGED_DURATION END )DA14,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 27 THEN CHARGED_DURATION END )DA27,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 45 THEN CHARGED_DURATION END )DA45,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 46 THEN CHARGED_DURATION END )DA46,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 84 THEN CHARGED_DURATION END )DA84,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 85 THEN CHARGED_DURATION END )DA85,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 227 THEN CHARGED_DURATION END )DA227,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 237 THEN CHARGED_DURATION END )DA237,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 96 THEN CHARGED_DURATION END )DA96,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 102 THEN CHARGED_DURATION END )DA102,
MAX (CASE WHEN PRIMARY_DEDUCTION_ACCOUNT_ID = 294 THEN CHARGED_DURATION END )DA294
FROM (
SELECT CALL_START_DATE, PRIMARY_DEDUCTION_ACCOUNT_ID, ROUND(SUM(nvl(CHARGED_DURATION,0))/60,2)  CHARGED_DURATION FROM Starlogic2
WHERE CALL_START_DATE BETWEEN '2025-03-01' AND '2025-03-08'
AND SERVICE_CLASS_C IN (SELECT SERVICE_CLASS_NAME FROM a2367622.Starlogic_SERVICE_CLASS)
AND CALLED_NOF NOT IN (SELECT CALLED_NOF FROM Starlogic2 WHERE PRIMARY_DEDUCTION_ACCOUNT_ID = 1 
AND LENGTH(SERVICE_CLASS_C) = 3 )
GROUP BY PRIMARY_DEDUCTION_ACCOUNT_ID, CALL_START_DATE
) GROUP BY CALL_START_DATE
) 
WITH ur;


----- This is the Query to generate the Call logs for OFF_NET Transactions

-------- OFFNET SECTION

CREATE TABLE Starlogic_offnet AS
---INSERT INTO Starlogic_offnet 
(
SELECT 
 CALL_ORIGINf ,called_nof,  CALL_START_DATE,  CALL_START_TIME, recall_time , 
nvl(SERVICE_CLASS_f,0)  SERVICE_CLASS_f,nvl(CHARGED_DURATION,0) CHARGED_DURATION, nvl(LEG_TYPE_KEY ,0 )LEG_TYPE_KEY
FROM (
(SELECT CALL_ORIGINATING_NUMBER CALL_ORIGINf,SERVICE_CLASS SERVICE_CLASS_f, CALL_TERMINATING_NUMBER
, RIGHT (CALL_TERMINATING_NUMBER,10) called_nof
, CALL_START_DATE, CALL_START_TIME,PRIMARY_DEDUCTION_ACCOUNT_ID FROM aoladime.CDR_SERVICE_USAGE_RATED_CDR_MAIN
WHERE CALL_START_DATE BETWEEN '2025-03-01' AND '2025-03-08'
AND CALL_TERMINATING_NUMBER LIKE '8850%'
AND LENGTH(CALL_TERMINATING_NUMBER) >= 14
AND SERVICE_USAGE_DIRECTION_KEY = 634
)a
LEFT OUTER JOIN
(SELECT CALL_ORIGINATING_NUMBER CALL_ORIGIN_c, CALL_TERMINATING_NUMBER Calling_no
, CALL_START_DATE call_date , CALL_START_TIME recall_time, CHARGEABLE_DURATION CHARGED_DURATION,LEG_TYPE_KEY FROM aoladime.CDR_SERVICE_USAGE_MSC
WHERE CALL_START_DATE BETWEEN '2025-03-01' AND '2025-03-08'
AND LEG_TYPE_KEY IN (571,569))b
ON CALL_ORIGINf = Calling_no 
AND CALL_ORIGIN_c = called_nof
AND recall_time BETWEEN CALL_START_TIME AND CALL_START_TIME + 1 HOUR
))
WITH ur;
----WITH NO DATA;



----- QUERY TO EXTRACT 1 TO ALL CALL LOGS FOR OFFNET CALL
CREATE TABLE Starlogic_offnet1 AS
---INSERT INTO Starlogic_offnet1
(SELECT  CALL_ORIGINF, CALLED_NOF, CALL_START_DATE, CALL_START_TIME, RECALL_TIME, SERVICE_CLASS_F, CHARGED_DURATION, LEG_TYPE_KEY  FROM 
(SELECT CALL_ORIGINF, CALLED_NOF, CALL_START_DATE, CALL_START_TIME, RECALL_TIME, SERVICE_CLASS_F,  CHARGED_DURATION, LEG_TYPE_KEY ,rownumber () over (PARTITION BY  CALL_ORIGINF, CALLED_NOF, CHARGED_DURATION ORDER BY CALL_START_DATE DESC) rn
FROM Starlogic_offnet
WHERE LEFT(CALL_START_DATE, 4)||'-'||SUBSTR(CALL_START_DATE,6,2)||'-'||SUBSTR(CALL_START_DATE, 9,2) = '2025-03-01'
)
WHERE rn = 1
)
WITH ur;


----- QUERY TO EXTRACT 1 TO 1 CALL LOGS FOR OFFNET CALL================
CREATE TABLE Starlogic_offnet2 AS
---INSERT INTO Starlogic_offnet2
(SELECT  CALL_ORIGINF, CALLED_NOF, CALL_START_DATE, CALL_START_TIME, RECALL_TIME, SERVICE_CLASS_F,  CHARGED_DURATION, LEG_TYPE_KEY  FROM 
(SELECT CALL_ORIGINF, CALLED_NOF, CALL_START_DATE, CALL_START_TIME, RECALL_TIME, SERVICE_CLASS_F,  CHARGED_DURATION, LEG_TYPE_KEY, 
rownumber () over (PARTITION BY  CALL_ORIGINF, CALLED_NOF, CALL_START_TIME ORDER BY CALL_START_TIME ASC) rn
FROM Starlogic_offnet1
WHERE LEFT(CALL_START_DATE, 4)||'-'||SUBSTR(CALL_START_DATE,6,2)||'-'||SUBSTR(CALL_START_DATE, 9,2) = '2025-03-01'
)
WHERE rn = 1
)
WITH ur;



----- QUERY TO UPDATE OFFNET CALL ON THE EXCEL===================

------------------------- ONE TO ONE OFFNET (C6 & C7) + MOU ---------------

SELECT  CALL_START_DATE, COUNT(CALLED_NOF) C6, COUNT(DISTINCT CALLED_NOF)C7, ROUND(SUM(nvl(CHARGED_DURATION,0))/60,2) offnet 
FROM Starlogic_offnet2 
WHERE CALL_START_DATE >= '2025-03-01'
AND RECALL_TIME IS NOT NULL
GROUP BY CALL_START_DATE 
WITH ur;



-------- This is the section that analyzes Account Balance of Starcall Users per Day. It helps us to check if the condition of <= 5.00 account balance for qualification still works
CREATE TABLE Starlogick1 AS
----INSERT INTO ofolarin.Starlogick1
(SELECT ACCESS_METHOD_IDENTIFIER, CALL_ORIGINATING_NUMBER, CALL_TERMINATING_NUMBER, CALL_START_DATE, 
CHARGED_DURATION, CALL_START_TIME, ACCOUNT_VALUE_BEFORE_CALL, ACCOUNT_VALUE_AFTER_CALL

FROM CDR_SERVICE_USAGE_RATED_CDR_MAIN 
WHERE CALL_START_DATE BETWEEN '2025-03-01' AND '2025-03-08'

AND CALL_TERMINATING_NUMBER LIKE '8850%'
AND LENGTH(CALL_TERMINATING_NUMBER) >= 14
 
AND SERVICE_USAGE_DIRECTION_KEY = 634 
--group BY CALL_START_DATE 
)
WITH ur;
---WITH NO DATA;

